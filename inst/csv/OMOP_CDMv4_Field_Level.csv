cdmTableName,cdmFieldName,isRequired,isRequiredThreshold,cdmDatatype,cdmDatatypeThreshold,userGuidance,etlConventions,isPrimaryKey,isPrimaryKeyThreshold,isForeignKey,isForeignKeyThreshold,fkTableName,fkFieldName,fkDomain,fkDomainThreshold,fkClass,fkClassThreshold,isStandardValidConcept,isStandardValidConceptThreshold,measureValueCompleteness,measureValueCompletenessThreshold,standardConceptRecordCompleteness,standardConceptRecordCompletenessThreshold,sourceConceptRecordCompleteness,sourceConceptRecordCompletenessThreshold,sourceValueCompleteness,sourceValueCompletenessThreshold,standardConceptFieldName,plausibleValueLow,plausibleValueLowThreshold,plausibleValueHigh,plausibleValueHighThreshold,plausibleTemporalAfterTableName,plausibleTemporalAfterFieldName,plausibleTemporalAfterThreshold,plausibleDuringLife,plausibleDuringLifeThreshold
PERSON,person_id,Yes,0,integer,0,It is assumed that every person with a different unique identifier is in fact a different person and should be treated independently.,Any person linkage that needs to occur to identify unique persons should be done prior to ETL.,Yes,0,No,,,,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
PERSON,gender_concept_id,Yes,0,integer,0,This field is meant to capture the biological sex at birth of the Person. This field should not be used to study gender identity issues.,Use the gender or sex value present in the data under the assumption that it is the biological sex at birth. If the source data captures gender identity it should be stored in the OBSERVATION table.,No,,Yes,0,CONCEPT,CONCEPT_ID,12,0,,,Yes,0,Yes,0,Yes,5,No,,No,,,,,,,,,,No,
PERSON,year_of_birth,Yes,0,integer,0,,"For data sources with date of birth, the year is extracted. For data sources where the year of birth is not available, the approximate year of birth is derived based on any age group categorization available.",No,,No,,,,,,,,No,,Yes,0,No,,No,,No,,,1850,1,YEAR(GETDATE())+1,1,,,,No,
PERSON,month_of_birth,No,,integer,0,,"For data sources that provide the precise date of birth, the month is extracted and stored in this field.",No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,1,1,12,1,,,,No,
PERSON,day_of_birth,No,,integer,0,,"For data sources that provide the precise date of birth, the day is extracted and stored in this field.",No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,1,1,31,1,,,,No,
PERSON,race_concept_id,Yes,0,integer,0,,,No,,Yes,0,CONCEPT,CONCEPT_ID,13,0,,,Yes,0,Yes,0,Yes,100,No,,No,,,,,,,,,,No,
PERSON,ethnicity_concept_id,Yes,0,integer,0,"Ethnic backgrounds as subsets of race. The OMOP CDM adheres to the OMB standards so only Concepts that represent ""Hispanic"" and ""Not Hispanic"" are stored here. If a source has more granular ethnicity information it can be found in the field ethnicity_source_value.",Ethnicity in the OMOP CDM follows the OMB Standards for Data on Race and Ethnicity: Only distinctions between Hispanics and Non-Hispanics are made. If a source provides more granular ethnicity information it should be stored in the field ethnicity_source_value.,No,,Yes,0,CONCEPT,CONCEPT_ID,44,0,,,Yes,0,Yes,0,Yes,100,No,,No,,,,,,,,,,No,
PERSON,location_id,No,,integer,0,The location refers to the physical address of the person.,"Put the location_id from the LOCATION table here that represents the most granular location information for the person. This could be zip code, state, or county for example.",No,,Yes,0,LOCATION,LOCATION_ID,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
PERSON,provider_id,No,,integer,0,The Provider refers to the last known primary care provider (General Practitioner).,Put the provider_id from the PROVIDER table of the last known general practitioner of the person.,No,,Yes,0,PROVIDER,PROVIDER_ID,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
PERSON,care_site_id,No,,integer,0,The Care Site refers to where the Provider typically provides the primary care.,,No,,Yes,0,CARE_SITE,CARE_SITE_ID,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
PERSON,person_source_value,No,,varchar(50),0,Use this field to link back to persons in the source data. This is typically used for error checking of ETL logic.,Some use cases require the ability to link back to persons in the source data. This field allows for the storing of the person value as it appears in the source.,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
PERSON,gender_source_value,No,,varchar(50),0,This field is used to store the biological sex of the person from the source data. It is not intended for use in standard analytics but for reference only.,Put the biological sex of the person as it appears in the source data.,No,,No,,,,,,,,No,,Yes,100,No,,No,,Yes,100,GENDER_CONCEPT_ID,,,,,,,,No,
PERSON,race_source_value,No,,varchar(50),0,This field is used to store the race of the person from the source data. It is not intended for use in standard analytics but for reference only.,Put the race of the person as it appears in the source data.,No,,No,,,,,,,,No,,Yes,100,No,,No,,Yes,100,RACE_CONCEPT_ID,,,,,,,,No,
PERSON,ethnicity_source_value,No,,varchar(50),0,This field is used to store the ethnicity of the person from the source data. It is not intended for use in standard analytics but for reference only.,"If the person has an ethnicity other than the OMB standard of ""Hispanic"" or ""Not Hispanic"" store that value from the source data here.",No,,No,,,,,,,,No,,Yes,100,No,,No,,Yes,100,ETHNICITY_CONCEPT_ID,,,,,,,,No,
OBSERVATION_PERIOD,observation_period_id,Yes,0,integer,0,A Person can have multiple discrete observations periods which are identified by the Observation_Period_Id. It is assumed that the observation period covers the period of time for which we know events occurred for the Person. In the context of the Common Data Model the absence of events during an observation period implies that the event did not occur.,"Assign a unique observation_period_id to each discrete observation period for a Person. An observation period should the length of time for which we know events occurred for the Person. It may take some logic to define an observation period, especially when working with EHR or registry data. Often if no enrollment or coverage information is given an observation period is defined as the time between the earliest record and the latest record available for a person.",Yes,0,No,,,,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
OBSERVATION_PERIOD,person_id,Yes,0,integer,0,,,No,,Yes,0,PERSON,PERSON_ID,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
OBSERVATION_PERIOD,observation_period_start_date,Yes,0,date,0,Use this date to determine the start date of the period for which we can assume that all events for a Person are recorded and any absense of records indicates an absence of events.,"It is often the case that the idea of observation periods does not exist in source data. In those cases the observation_period_start_date can be inferred as the earliest event date available for the Person. In US claims, the observation period can be considered as the time period the person is enrolled with an insurer. If a Person switches plans but stays with the same insurer, that change would be captured in payer_plan_period.",No,,No,,,,,,,,No,,Yes,0,No,,No,,No,,,'1950-01-01',1,"DATEADD(dd,1,GETDATE())",1,PERSON,"DATEFROMPARTS(YEAR_OF_BIRTH,MONTH_OF_BIRTH,DAY_OF_BIRTH)",1,Yes,1
OBSERVATION_PERIOD,observation_period_end_date,Yes,0,date,0,Use this date to determine the end date of the period for which we can assume that all events for a Person are recorded and any absense of records indicates an absence of events.,It is often the case that the idea of observation periods does not exist in source data. In those cases the observation_period_start_end_date can be inferred as the latest event date available for the Person. The event dates include insurance enrollment dates.,No,,No,,,,,,,,No,,Yes,0,No,,No,,No,,,'1950-01-01',1,"DATEADD(dd,1,GETDATE())",1,OBSERVATION_PERIOD,OBSERVATION_PERIOD_START_DATE,1,Yes,1
VISIT_OCCURRENCE,visit_occurrence_id,Yes,0,integer,0,Use this to identify unique interactions between a person and the health care system. This identifier links across the other CDM event tables to associate events with a visit.,This should be populated by creating a unique identifier for each unique interaction between a person and the healthcare system where the person receives a medical good or service over a span of time.,Yes,0,No,,,,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
VISIT_OCCURRENCE,person_id,Yes,0,integer,0,,,No,,Yes,0,PERSON,PERSON_ID,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
VISIT_OCCURRENCE,visit_start_date,Yes,0,date,0,"For inpatient visits, the start date is typically the admission date. For outpatient visits the start date and end date will be the same.","When populating visit_start_date, you will first have to make decisions on how to define visits. In some cases visits in the source data can be strung together if there are one or fewer days between them.",No,,No,,,,,,,,No,,Yes,0,No,,No,,No,,,'1950-01-01',1,"DATEADD(dd,1,GETDATE())",1,PERSON,"DATEFROMPARTS(YEAR_OF_BIRTH,MONTH_OF_BIRTH,DAY_OF_BIRTH)",1,Yes,1
VISIT_OCCURRENCE,visit_end_date,Yes,0,date,0,For inpatient visits the end date is typically the discharge date.,"Visit end dates are mandatory. If end dates are not provided in the source there are three ways in which to derive them:
Outpatient Visit: visit_end_datetime = visit_start_datetime
Emergency Room Visit: visit_end_datetime = visit_start_datetime
Inpatient Visit: Usually there is information about discharge. If not, you should be able to derive the end date from the sudden decline of activity or from the absence of inpatient procedures/drugs.
Non-hospital institution Visits: Particularly for claims data, if end dates are not provided assume the visit is for the duration of month that it occurs.
For Inpatient Visits ongoing at the date of ETL, put date of processing the data into visit_end_datetime and visit_type_concept_id with 32220 ""Still patient"" to identify the visit as incomplete.
All other Visits: visit_end_datetime = visit_start_datetime. If this is a one-day visit the end date should match the start date.",No,,No,,,,,,,,No,,Yes,0,No,,No,,No,,,'1950-01-01',1,"DATEADD(dd,1,GETDATE())",1,VISIT_OCCURRENCE,VISIT_START_DATE,1,Yes,1
VISIT_OCCURRENCE,care_site_id,No,,integer,0,This field provides information about the care site where the visit took place.,There should only be one care site associated with a visit.,No,,Yes,0,CARE_SITE,CARE_SITE_ID,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
VISIT_OCCURRENCE,visit_source_concept_id,No,,integer,0,,If the visit source value is coded in the source data using an OMOP supported vocabulary put the concept id representing the source value here.,No,,Yes,0,CONCEPT,CONCEPT_ID,,,,,No,,Yes,100,No,,Yes,100,No,,,,,,,,,,No,
CONDITION_OCCURRENCE,condition_occurrence_id,Yes,0,bigint,0,,,Yes,0,No,,,,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
CONDITION_OCCURRENCE,person_id,Yes,0,bigint,0,,,No,,Yes,0,PERSON,PERSON_ID,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
CONDITION_OCCURRENCE,condition_concept_id,Yes,0,integer,0,"The CONDITION_CONCEPT_ID field is recommended for primary use in analyses, and must be used for network studies",,No,,Yes,0,CONCEPT,CONCEPT_ID,"1,5",0,,,Yes,0,Yes,0,Yes,5,No,,No,,,,,,,,,,No,
CONDITION_OCCURRENCE,condition_start_date,Yes,0,date,0,,,No,,No,,,,,,,,No,,Yes,0,No,,No,,No,,,'1950-01-01',1,"DATEADD(dd,1,GETDATE())",1,PERSON,"DATEFROMPARTS(YEAR_OF_BIRTH,MONTH_OF_BIRTH,DAY_OF_BIRTH)",1,Yes,1
CONDITION_OCCURRENCE,condition_end_date,No,,date,0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,'1950-01-01',1,"DATEADD(dd,1,GETDATE())",1,CONDITION_OCCURRENCE,CONDITION_START_DATE,1,Yes,1
CONDITION_OCCURRENCE,condition_type_concept_id,Yes,0,integer,0,,,No,,Yes,0,CONCEPT,CONCEPT_ID,37,0,,,Yes,0,Yes,0,Yes,0,No,,No,,,,,,,,,,No,
CONDITION_OCCURRENCE,stop_reason,No,,varchar(20),0,The Stop Reason indicates why a Condition is no longer valid with respect to the purpose within the source data. Note that a Stop Reason does not necessarily imply that the condition is no longer occurring.,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
CONDITION_OCCURRENCE,visit_occurrence_id,No,,integer,0,,,No,,Yes,0,VISIT_OCCURRENCE,VISIT_OCCURRENCE_ID,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
CONDITION_OCCURRENCE,condition_source_value,No,,varchar(50),0,"This field is discouraged from use in analysis because it is not required to contain Standard Concepts that are used across the OHDSI community, and should only be used when Standard Concepts do not adequately represent the source detail for the Condition necessary for a given analytic use case.  Consider using CONDITION_CONCEPT_ID instead to enable standardized analytics that can be consistent across the network.  ",This code is mapped to a Standard Condition Concept in the Standardized Vocabularies and the original code is stored here for reference.,No,,No,,,,,,,,No,,Yes,100,No,,No,,Yes,10,CONDITION_CONCEPT_ID,,,,,,,,No,
DRUG_EXPOSURE,drug_exposure_id,Yes,0,bigint,0,,,Yes,,No,,,,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
DRUG_EXPOSURE,person_id,Yes,0,bigint,0,,,No,,Yes,0,PERSON,PERSON_ID,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
DRUG_EXPOSURE,drug_concept_id,Yes,0,integer,0,,,No,,Yes,0,CONCEPT,CONCEPT_ID,"5,8,82",0,,,Yes,0,Yes,0,Yes,5,No,,No,,,,,,,,,,No,
DRUG_EXPOSURE,drug_exposure_start_date,Yes,0,date,0,,"Valid entries include a start date of a prescription, the date a prescription was filled, or the date on which a Drug administration procedure was recorded.",No,,No,,,,,,,,No,,Yes,0,No,,No,,No,,,'1950-01-01',1,"DATEADD(dd,1,GETDATE())",1,PERSON,"DATEFROMPARTS(YEAR_OF_BIRTH,MONTH_OF_BIRTH,DAY_OF_BIRTH)",1,Yes,1
DRUG_EXPOSURE,drug_exposure_end_date,Yes,0,date,0,,"The DRUG_EXPOSURE_END_DATE denotes the day the drug exposure ended for the patient. This could be that the duration of DRUG_SUPPLY was reached (in which case DRUG_EXPOSURE_END_DATETIME = DRUG_EXPOSURE_START_DATETIME + DAYS_SUPPLY -1 day), or because the exposure was stopped (medication changed, medication discontinued, etc.)   When the native data suggests a drug exposure has a days supply less than 0, drop the record as unknown if a person has received the drug or not (THEMIS issue #24).   If a patient has multiple records on the same day for the same drug or procedures the ETL should not de-dupe them unless there is probable reason to believe the item is a true data duplicate (THEMIS issue #14).  Depending on different sources, it could be a known or an inferred date and denotes the last day at which the patient was still exposed to Drug.",No,,No,,,,,,,,No,,Yes,0,No,,No,,No,,,'1950-01-01',1,"DATEADD(dd,1,GETDATE())",1,DRUG_EXPOSURE,DRUG_EXPOSURE_START_DATE,1,Yes,1
DRUG_EXPOSURE,drug_type_concept_id,Yes,0,integer,0,,,No,,Yes,0,CONCEPT,CONCEPT_ID,36,0,,,Yes,0,Yes,0,Yes,0,No,,No,,,,,,,,,,No,
DRUG_EXPOSURE,stop_reason,No,,varchar(20),0,," Reasons include regimen completed, changed, removed, etc.",No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
DRUG_EXPOSURE,refills,No,,integer,0,"The content of the refills field determines the current number of refills, not the number of remaining refills. For example, for a drug prescription with 2 refills, the content of this field for the 3 Drug Exposure events are null, 1 and 2.",,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,0,1,12,1,,,,No,
DRUG_EXPOSURE,quantity,No,,float,0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,0,1,1095,1,,,,No,
DRUG_EXPOSURE,days_supply,No,,integer,0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,0,1,365,1,,,,No,
DRUG_EXPOSURE,sig,No,,varchar(MAX),0,(and printed on the container),,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
DRUG_EXPOSURE,visit_occurrence_id,No,,integer,0,,,No,,Yes,0,VISIT_OCCURRENCE,VISIT_OCCURRENCE_ID,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
DRUG_EXPOSURE,drug_source_value,No,,varchar(50),0,,"This code is mapped to a Standard Drug concept in the Standardized Vocabularies and the original code is, stored here for reference.",No,,No,,,,,,,,No,,Yes,100,No,,No,,Yes,10,DRUG_CONCEPT_ID,,,,,,,,No,
PROCEDURE_OCCURRENCE,procedure_occurrence_id,Yes,0,integer,0,,,Yes,0,No,,,,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
PROCEDURE_OCCURRENCE,person_id,Yes,0,integer,0,,,No,,Yes,0,PERSON,PERSON_ID,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
PROCEDURE_OCCURRENCE,procedure_concept_id,Yes,0,integer,0,,,No,,Yes,0,CONCEPT,CONCEPT_ID,"1,3,4,5,35",0,,,Yes,0,Yes,0,Yes,5,No,,No,,,,,,,,,,No,
PROCEDURE_OCCURRENCE,procedure_date,Yes,0,date,0,,,No,,No,,,,,,,,No,,Yes,0,No,,No,,No,,,'1950-01-01',1,"DATEADD(dd,1,GETDATE())",1,PERSON,"DATEFROMPARTS(YEAR_OF_BIRTH,MONTH_OF_BIRTH,DAY_OF_BIRTH)",1,Yes,1
PROCEDURE_OCCURRENCE,procedure_type_concept_id,Yes,0,integer,0,,,No,,Yes,0,CONCEPT,CONCEPT_ID,38,0,,,Yes,0,Yes,0,Yes,0,No,,No,,,,,,,,,,No,
PROCEDURE_OCCURRENCE,visit_occurrence_id,No,,integer,0,,,No,,Yes,0,VISIT_OCCURRENCE,VISIT_OCCURRENCE_ID,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
PROCEDURE_OCCURRENCE,procedure_source_value,No,,varchar(50),0,,"This code is mapped to a standard procedure Concept in the Standardized Vocabularies and the original code is, stored here for reference. Procedure source codes are typically ICD-9-Proc, CPT-4, HCPCS or OPCS-4 codes.",No,,No,,,,,,,,No,,Yes,100,No,,No,,Yes,100,PROCEDURE_CONCEPT_ID,,,,,,,,No,
OBSERVATION,observation_id,Yes,0,integer,0,,,Yes,0,No,,,,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
OBSERVATION,person_id,Yes,0,integer,0,,,No,,Yes,0,PERSON,PERSON_ID,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
OBSERVATION,observation_concept_id,Yes,0,integer,0,,,No,,Yes,0,CONCEPT,CONCEPT_ID,,,,,Yes,0,Yes,0,Yes,5,No,,No,,,,,,,,,,No,
OBSERVATION,observation_date,Yes,0,date,0,,,No,,No,,,,,,,,No,,Yes,0,No,,No,,No,,,'1950-01-01',1,"DATEADD(dd,1,GETDATE())",1,PERSON,"DATEFROMPARTS(YEAR_OF_BIRTH,MONTH_OF_BIRTH,DAY_OF_BIRTH)",1,No,
OBSERVATION,observation_type_concept_id,Yes,0,integer,0,,,No,,Yes,0,CONCEPT,CONCEPT_ID,39,0,,,Yes,0,Yes,0,Yes,0,No,,No,,,,,,,,,,No,
OBSERVATION,value_as_number,No,,float,0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
OBSERVATION,value_as_string,No,,varchar(60),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
OBSERVATION,value_as_concept_id,No,,Integer,0,,"Note that the value of VALUE_AS_CONCEPT_ID may be provided through mapping from a source Concept which contains the content of the Observation. In those situations, the CONCEPT_RELATIONSHIP table in addition to the 'Maps to' record contains a second record with the relationship_id set to 'Maps to value'. For example, ICD9CM V17.5 concept_id 44828510 'Family history of asthma' has a 'Maps to' relationship to 4167217 'Family history of clinical finding' as well as a 'Maps to value' record to 317009 'Asthma'.",No,,Yes,0,CONCEPT,CONCEPT_ID,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
OBSERVATION,unit_concept_id,No,,integer,0,,,No,,Yes,0,CONCEPT,CONCEPT_ID,11,0,,,Yes,0,Yes,100,Yes,5,No,,No,,,,,,,,,,No,
OBSERVATION,visit_occurrence_id,No,,integer,0,,,No,,Yes,0,VISIT_OCCURRENCE,VISIT_OCCURRENCE_ID,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
OBSERVATION,observation_source_value,No,,varchar(50),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,Yes,100,OBSERVATION_CONCEPT_ID,,,,,,,,No,
OBSERVATION,unit_source_value,No,,varchar(50),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,Yes,100,UNIT_CONCEPT_ID,,,,,,,,No,
LOCATION,location_id,Yes,0,integer,0,,,Yes,0,No,,,,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
LOCATION,address_1,No,,varchar(50),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
LOCATION,address_2,No,,varchar(50),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
LOCATION,city,No,,varchar(50),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
LOCATION,state,No,,varchar(2),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
LOCATION,zip,No,,varchar(9),0,,"Zip codes are handled as strings of up to 9 characters length. For US addresses, these represent either a 3-digit abbreviated Zip code as provided by many sources for patient protection reasons, the full 5-digit Zip or the 9-digit (ZIP + 4) codes. Unless for specific reasons analytical methods should expect and utilize only the first 3 digits. For international addresses, different rules apply.",No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
LOCATION,county,No,,varchar(20),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
LOCATION,location_source_value,No,,varchar(50),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
CARE_SITE,care_site_id,Yes,0,integer,0,,,Yes,0,No,,,,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
CARE_SITE,place_of_service_concept_id,No,,integer,0,,,No,,Yes,0,CONCEPT,CONCEPT_ID,,,,,Yes,0,Yes,100,Yes,100,No,,No,,,,,,,,,,No,
CARE_SITE,location_id,No,,integer,0,,,No,,Yes,0,LOCATION,LOCATION_ID,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
CARE_SITE,care_site_source_value,No,,varchar(50),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
CARE_SITE,place_of_service_source_value,No,,varchar(50),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
PROVIDER,provider_id,Yes,0,integer,0,,,Yes,0,No,,,,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
PROVIDER,npi,No,,varchar(20),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
PROVIDER,dea,No,,varchar(20),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
PROVIDER,specialty_concept_id,No,,integer,0,,"If a Provider has more than one Specialty, the main or most often exerted specialty should be recorded.",No,,Yes,0,CONCEPT,CONCEPT_ID,,,,,Yes,0,Yes,100,Yes,100,No,,No,,,,,,,,,,No,
PROVIDER,care_site_id,No,,integer,0,,,No,,Yes,0,CARE_SITE,CARE_SITE_ID,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
PROVIDER,provider_source_value,No,,varchar(50),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,,,,,,,,,,No,
PROVIDER,specialty_source_value,No,,varchar(50),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,Yes,100,SPECIALTY_CONCEPT_ID,,,,,,,,No,
PAYER_PLAN_PERIOD,payer_plan_period_id,Yes,0,integer,0,,,Yes,0,Yes,0,PERSON,PERSON_ID,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
PAYER_PLAN_PERIOD,person_id,Yes,0,integer,0,,,No,,Yes,0,PERSON,PERSON_ID,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
PAYER_PLAN_PERIOD,payer_plan_period_start_date,Yes,0,date,0,,,No,,No,,,,,,,,No,,Yes,0,No,,No,,No,,,,,,,,,,No,
PAYER_PLAN_PERIOD,payer_plan_period_end_date,Yes,0,date,0,,,No,,No,,,,,,,,No,,Yes,0,No,,No,,No,,,,,,,PAYER_PLAN_PERIOD,PAYER_PLAN_PERIOD_START_DATE,1,No,
PAYER_PLAN_PERIOD,payer_source_value,No,,varchar(50),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,100,,,,,,,,,No,
PAYER_PLAN_PERIOD,plan_source_value,No,,varchar(50),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,100,,,,,,,,,No,
PAYER_PLAN_PERIOD,family_source_value,No,,varchar(50),0,,,No,,No,,,,,,,,No,,Yes,100,No,,No,,No,0,,,,,,,,,No,
DRUG_ERA,drug_era_id,Yes,0,integer,0,,,Yes,0,No,,,,,,,,,,Yes,0,No,,No,,No,,,,,,,,,,No,
DRUG_ERA,person_id,Yes,0,integer,0,,,No,,Yes,0,PERSON,PERSON_ID,,,,,,,Yes,0,No,,No,,No,,,,,,,,,,No,
DRUG_ERA,drug_concept_id,Yes,0,integer,0,,,No,,Yes,0,CONCEPT,CONCEPT_ID,"5,8,82",0,Ingredient,0,Yes,0,Yes,0,Yes,0,No,,No,,,,,,,,,,No,
DRUG_ERA,drug_era_start_date,Yes,0,datetime,0,,The Drug Era Start Date is the start date of the first Drug Exposure for a given ingredient.  (NOT RIGHT),No,,No,,,,,,,,,,Yes,0,No,,No,,No,,,'1950-01-01',1,"DATEADD(dd,1,GETDATE())",1,PERSON,"DATEFROMPARTS(YEAR_OF_BIRTH,MONTH_OF_BIRTH,DAY_OF_BIRTH)",1,Yes,1
DRUG_ERA,drug_era_end_date,Yes,0,datetime,0,,"The Drug Era End Date is the end date of the last Drug Exposure. The End Date of each Drug Exposure is either taken from the field drug_exposure_end_date or, as it is typically not available, inferred using the following rules:
For pharmacy prescription data, the date when the drug was dispensed plus the number of days of supply are used to extrapolate the End Date for the Drug Exposure. Depending on the country-specific healthcare system, this supply information is either explicitly provided in the day_supply field or inferred from package size or similar information.
For Procedure Drugs, usually the drug is administered on a single date (i.e., the administration date).
A standard Persistence Window of 30 days (gap, slack) is permitted between two subsequent such extrapolated DRUG_EXPOSURE records to be considered to be merged into a single Drug Era.   (ARENT WE REQUIRING TO USE DRUG_EXPOSURE_END_DATE NOW????)",No,,No,,,,,,,,,,Yes,0,No,,No,,No,,,'1950-01-01',1,"DATEADD(dd,1,GETDATE())",1,DRUG_ERA,DRUG_ERA_START_DATE,1,No,
DRUG_ERA,drug_exposure_count,No,,integer,0,,,No,,No,,,,,,,,,,Yes,100,No,,No,,No,,,1,1,,,,,,No,
CONDITION_ERA,condition_era_id,Yes,0,integer,0,,,Yes,0,No,,,,,,,,,,Yes,0,No,,No,,No,,,,,,,,,,No,
CONDITION_ERA,person_id,Yes,0,integer,0,,,No,,Yes,0,PERSON,PERSON_ID,,,,,,,Yes,0,No,,No,,No,,,,,,,,,,No,
CONDITION_ERA,condition_concept_id,Yes,0,integer,0,,,No,,Yes,0,CONCEPT,CONCEPT_ID,"1,5",0,,,Yes,0,Yes,0,Yes,0,No,,No,,,,,,,,,,No,
CONDITION_ERA,condition_era_start_date,Yes,0,datetime,0,,,No,,No,,,,,,,,,,Yes,0,No,,No,,No,,,'1950-01-01',1,"DATEADD(dd,1,GETDATE())",1,PERSON,"DATEFROMPARTS(YEAR_OF_BIRTH,MONTH_OF_BIRTH,DAY_OF_BIRTH)",1,Yes,1
CONDITION_ERA,condition_era_end_date,Yes,0,datetime,0,,,No,,No,,,,,,,,,,Yes,0,No,,No,,No,,,'1950-01-01',1,"DATEADD(dd,1,GETDATE())",1,PERSON,"DATEFROMPARTS(YEAR_OF_BIRTH,MONTH_OF_BIRTH,DAY_OF_BIRTH)",1,No,
CONDITION_ERA,condition_occurrence_count,No,,integer,0,,,No,,No,,,,,,,,,,Yes,100,No,,No,,No,,,1,1,,,,,,No,